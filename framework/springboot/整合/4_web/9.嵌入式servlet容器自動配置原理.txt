EmabeddedServletContainerAutoConfiguration.java

@AutoConfigureOrder(Ordered.HIGHEST_PRECEDENCE)
@Configuration
@ConditionalOnWebApplication
@Import(BeanPostProcessorsRegistrar.class)
// 引入 BeanPostProcessorsRegistrar，spring annotation: 給容器引入組件
// 引入 EmabeddedServletContainerCustomizerBeanProcessor:
// 後制處理器，bean初始化前後(創建對象，還沒賦值)執行初始化工作
public class EmabeddedServletContainerAutoConfiguration {

	@Configuration
	@ConditionalOnClass({ Servlet.class, Tomcat.class })
	@ConditionalOnMissingBean(value = EmabeddedServletContainerFactory.class, search = SearchStrategy.CURRENT)
	public static class EmabeddedTomcat {
		@Bean
		public TomcatEmabeddedServletContainerFactory tomcatEmabeddedServletContainerFactory(){
			return new TomcatEmabeddedServletContainerFactory();
		}
	}
	
	EmabeddedServletContainer
		UndertowEmbeddedServletContainer
		TomcatEmabeddedServletContainer
		JettyEmabeddedServletContainer
		
	如何對嵌入式容器的配置修改生效?
		ServerProperties、EmabeddedServletContainerCustomizer
		
		EmabeddedServletContainerCustomizer:定制器幫我們修改了servlet容器的配置
		修改原理
			
		容器中引入了 EmabeddedServletContainerCustomizerBeanProcessor
		
		ServerProperties 也是 EmabeddedServletContainerCustomizer
		
	步驟
		1.springboot 根據導入的依賴情況，給容器中添加相應的
			EmabeddedServletContainerFactory[TomcatEmabeddedServletContainerFactory]
		2.容器中某個元件要創建對象就會觸發後制處理器
			EmabeddedServletContainerCustomizerBeanProcessor
			只要是嵌入式的servlet容器工廠，後制處理器就工作；
		3.後制處理器從容器中獲取所有的 EmabeddedServletContainerCustomizer 呼叫定制器的定制方式
		

