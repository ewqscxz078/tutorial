引用資源
	預設頁面資源
		resources/public/index.html 未特別宣告則預設首頁位置
	css、image、js資源
		resources/static
	模板引擎資源
		resources/templates


1. 默認首頁

	第一種
		@Controller
		public class HelloController {

			@RequestMapping({"/","index.html"})
			public String index(){
				// classpath:/templates/index.html
				return "index"
			}
		}

	第二種
		@Configuration
		public class MyConfig extends WebMvcConfigurationAdapter {
			// 只需要複寫要不一樣需求的函數即可
			@Override
			public void addViewControllers(ViewControllerRegistry registry){
				// 瀏覽器訪問 /atguigu 請求來到 success
				registry.addViewController( urlPath: "/atguigu" ).setViewName("success");
			}

			// 元件在容器找的到
			@Bean
			//所有的 WebMvcConfigurationAdapter 組件都會一起作用
			public WebMvcConfigurationAdapter webMvcConfigurationAdapter(){
				WebMvcConfigurationAdapter adapter = new WebMvcConfigurationAdapter(){
					@Override
					pubilc void addViewControllers(ViewControllerRegistry registry){
						registry.addViewController( urlPath: "/atguigu" ).setViewName("index");
						registry.addViewController( urlPath: "/index.html" ).setViewName("index");
					}
				}
				return adapter
			}
		}

2.thymeleaf 好處
	classpath:/templates/index.html
		<!-- 引入提供提示-->
		<html xmlns:th="http://www.thymeleaf.org">
			<head>
				<link href="asserts/css/bootstrap.min.css" th:href="@{/webjars/bootstrap/4.0.0/css/bootstrap.css}" rel=stylesheet></link>
				<link href="asserts/css/signin.css" th:href="@{/asserts/css/signin.css}" rel=stylesheet></link>
			</head>
			<body>
				<h1>成功<h1>
				<div id="div01" class="myDiv" th:id="${hello}" th:class="${hello}" th:text="${hello}">歡迎</div>
				<!-- 經過模板引擎後將輸出 : 你好、id="你好"、class="你好" -->
				<!-- 未經過模板引擎後將輸出 : 歡迎、id="div01" class="myDiv" -->
			</body>
		</html>

	當 server.servlet.context-path=/xxx 修改了
	則 模板引擎訪問的前綴路徑會自動修正
		<link href="/xxx/asserts/css/signin.css" rel=stylesheet></link>