springboot映射規則

webMvcAutoConfiguration
	1.所有/webjars/**，都去classpath:/META-INF/resources/webjars/找資源
		webjars: 以jar包的方式引入靜態資源

		https://www.webjars.org/

		  <dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>3.3.1</version>
		  </dependency>


		localhost:8080/webjars/jquery/3.3.1/jquery.js

	2./**訪問當前項目的任何資源，靜態資源的文件夾
		classpath:/META-INF/resources/
		classpath:/resources/
		classpath:/static/
		classpath:/public/
		"/"

		例如在
			javaProject/src/main/resources/static/
				放入 assert/js/Chat.min.js
		訪問
			當前項目根路徑/ + 靜態資源名
				localhost:8080/assert/js/Chat.min.js

		原理： 靜態映射/**。
			請求進來，先去找Controller看能不能處理。不能處理的所有請求又都交給靜態資源處理器。靜態資源也找不到則響應404頁面

		改變默認的靜態資源東西
			#改變訪問靜態資源的方式，訪問的前墜
			spring:
			  mvc:
				static-path-pattern: /res/**

				也就是 localhost:8080/res/${專案的靜態資源路徑}

			#改變靜態資源的路徑來源
			  resources:
				static-locations: [classpath:/haha/]

	3.歡迎頁；靜態資源文件夾下的所有 index.html 頁面; 被 /** 對應
		localhost:8080/ 找 index.html 頁面

		  ○ 可以配置靜態資源路徑
		  ○ 但是不可以配置靜態資源的訪問前綴。否則導致 index.html不能被默認訪問
			spring:
			#  mvc:
			#    static-path-pattern: /res/**   這個會導致welcome page功能失效

			  resources:
				static-locations: [classpath:/haha/]

	4.圖標；所有的 /**/favicon.ico 都在靜態資源文件下找
		spring:
		#  mvc:
		#    static-path-pattern: /res/**   這個會導致 Favicon 功能失效


JSP 限制
	1.對於 Jetty 和 Tomcat，如果您使用 war 包裝，它應該可以工作。
		可執行的 war 在使用 java -jar 啟動時可以工作，並且還可以部署到任何標準容器。 使用可執行 jar 時不支援 JSP。

	2.Undertow 不支援 JSP。

	3.建立自訂 error.jsp 頁面不會覆蓋錯誤處理的預設視圖。 應改用自訂錯誤頁面。


常見放置內容(ref chatGPT)
	src/main/resources/static 目錄：
		靜態資源檔案：
			CSS檔案：
				用來定義網頁樣式的樣式表檔案。
			JavaScript檔案：
				前端腳本檔案，用來實現網頁交互和動態效果。
			圖片檔案：
				靜態圖片檔案，例如PNG、JPEG等格式的圖像。
		前端框架和庫：
			Bootstrap、jQuery等： 如果您使用了前端框架或庫，可以將其檔案放置在此目錄中。
		字型檔案：
			字型檔案（.woff、.woff2等）： 用來定製網頁字型樣式的字型檔案。
		其他靜態資源：
			其他靜態檔案： 例如圖示檔案（favicon.ico）等。

	src/main/resources/templates 目錄：
		Thymeleaf模板檔案：
			HTML檔案（.html）： Thymeleaf模板檔案，用來生成動態的HTML視圖。
			Thymeleaf標籤和表達式： 使用Thymeleaf的標籤和表達式實現模板中的動態內容。
		佈局檔案：
			整體佈局檔案： 包含網站整體結構的HTML檔案，可以使用Thymeleaf的佈局功能。
		片段檔案：
			可重複使用的片段檔案： 將頁面中的某些部分抽象為片段，以便在多個頁面中重複使用。
		靜態資料檔案：
			YAML或JSON檔案： 可以存放一些靜態資料，供模板使用。