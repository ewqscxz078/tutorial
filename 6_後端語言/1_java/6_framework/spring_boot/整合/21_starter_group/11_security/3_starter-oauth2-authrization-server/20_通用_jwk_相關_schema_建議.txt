jwk_rotation_policy
	-- Portable baseline DDL (aims for broad compatibility)
	CREATE TABLE jwk_rotation_policy (
	  id                      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	  issuer                  VARCHAR(200) NOT NULL,        -- e.g. https://auth.example.com
	  purpose                 VARCHAR(8)   NOT NULL,        -- 'sig' | 'enc'
	  kty                     VARCHAR(16)  NOT NULL,        -- 'RSA' | 'EC' | 'OKP' ...
	  alg                     VARCHAR(32)  NOT NULL,        -- 'RS256' | 'ES256' | 'EdDSA' ...

	  -- ISO-8601 duration literals (PT30M / PT2H / P1D ...)
	  rotation_interval_iso   VARCHAR(40)  NOT NULL DEFAULT 'P1D',
	  transition_iso          VARCHAR(40)  NOT NULL DEFAULT 'P7D',
	  prev_active_iso         VARCHAR(40)  NOT NULL DEFAULT 'P7D',
	  overlap_grace_iso       VARCHAR(40)  NOT NULL DEFAULT 'PT48H',

	  -- Use SMALLINT(0/1) for booleans to maximize portability
	  auto_rotate             SMALLINT     NOT NULL DEFAULT 1,
	  max_keys_retained       INT          NOT NULL DEFAULT 6,

	  inactive_retention_iso  VARCHAR(40)  NOT NULL DEFAULT 'P90D',
	  wipe_private_key_only   SMALLINT     NOT NULL DEFAULT 1,

	  last_rotated_at         TIMESTAMP    NULL,
	  next_rotate_at          TIMESTAMP    NULL,            -- 一般塞入應為 當前時間 + rotation_interval_iso

	  created_at              TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
	  updated_at              TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,

	  CONSTRAINT ux_jrp_issuer_purpose_alg UNIQUE (issuer, purpose, alg),

	  -- lightweight validations
	  CONSTRAINT ck_jrp_bool_auto_rotate
		CHECK (auto_rotate IN (0, 1)),
	  CONSTRAINT ck_jrp_bool_wipe_only
		CHECK (wipe_private_key_only IN (0, 1)),
	  CONSTRAINT ck_jrp_purpose
		CHECK (purpose IN ('sig', 'enc')),
	  CONSTRAINT ck_jrp_rotation_interval_iso
		CHECK (rotation_interval_iso LIKE 'P%'),
	  CONSTRAINT ck_jrp_transition_iso
		CHECK (transition_iso LIKE 'P%'),
	  CONSTRAINT ck_jrp_prev_active_iso
		CHECK (prev_active_iso LIKE 'P%'),
	  CONSTRAINT ck_jrp_overlap_grace_iso
		CHECK (overlap_grace_iso LIKE 'P%')
	);

	-- Common secondary indexes
	CREATE INDEX ix_jrp_issuer ON jwk_rotation_policy (issuer);

	-- Portable substitute for a filtered index:
	-- Query can use WHERE auto_rotate = 1 AND next_rotate_at IS NOT NULL
	-- and still benefit from this composite index.
	CREATE INDEX ix_jrp_due ON jwk_rotation_policy (auto_rotate, next_rotate_at);


jwk_key
	CREATE TABLE jwk_key (
	  id            BIGINT IDENTITY PRIMARY KEY,
	  kid           VARCHAR(100) UNIQUE NOT NULL,

	  issuer        VARCHAR(200) NOT NULL,         -- e.g. https://auth.example.com
	  purpose       VARCHAR(8)  NOT NULL,          -- 'sig' or 'enc'，一般jwt都是 sig；若有特定需求是 JWE 則就是用 enc
	  alg           VARCHAR(20)  NOT NULL,         -- e.g. RS256

	  kty           VARCHAR(20)  NOT NULL,         -- e.g. RSA
	  status        VARCHAR(20) NOT NULL,          -- PREPARED / ACTIVE / PREV_ACTIVE / INACTIVE / COMPROMISED
	  public_jwk    NVARCHAR(MAX) NOT NULL,        -- JWK 公鑰 (JSON)
	  private_jwk_enc NVARCHAR(MAX) NULL,          -- 私鑰的「加密後」JWK (JSON)

	  not_before    DATETIME2(3) NULL,             -- 此 key 可用起始（簽章/驗章）

	  not_after     DATETIME2(3) NULL,             -- 此 key 停用時間（通常保留驗章期）
	  activated_at  DATETIME2    NULL,

	  grace_until   DATETIME2(3) NULL,             -- GRACE（僅驗章）到期時間
	  deactivated_at DATETIME2   NULL,

	  created_at    DATETIME2    NOT NULL DEFAULT SYSUTCDATETIME()
      comment       VARCHAR(4000) NULL
	);

	CREATE UNIQUE INDEX UX_jwk_key_kid    ON jwk_key(kid);
	CREATE INDEX IX_jwk_key_status        ON jwk_key(status);
	CREATE INDEX IX_jwk_key_activated_at  ON jwk_key(activated_at) WHERE activated_at IS NOT NULL;

jwks_meta
	CREATE TABLE jwks_meta (
	  issuer         NVARCHAR(200) NOT NULL,
	  purpose        VARCHAR(8)    NOT NULL,         -- 'SIG' | 'ENC'
	  alg            NVARCHAR(32)  NOT NULL DEFAULT '__ANY__',
      jwks_hash      VARCHAR(100)  NULL;             -- 例: 'sha256:AbCd...'(base64url, 無 '=')
	  revision       BIGINT        NOT NULL DEFAULT 1,
	  last_modified  DATETIME2     NOT NULL DEFAULT SYSUTCDATETIME(),
	  key_count      INT           NOT NULL DEFAULT 0,
	  CONSTRAINT pk_jwks_meta PRIMARY KEY (issuer, purpose, alg)
	);

	在任何 rotation / compromise / cleanup 的同一交易裡：
		UPDATE jwks_meta SET version = version + 1, updated_at = SYSUTCDATETIME() WHERE id = 1;
		好處：不必做 JSON 規範化，多節點只要讀到同一個 version 就回同一個 ETag。
		若要避免節點間延遲，可再加 Redis Pub/Sub 廣播「version changed」讓節點即時 bumpAndPublish()。

jwk_denylist TODO 對應程式修改
		有些系統會放一起，因為有時候要封鎖某把金鑰，有時候要封鎖單一 token。
		CREATE TABLE jwk_denylist (
			id          BIGINT IDENTITY(1,1) PRIMARY KEY,
			issuer      VARCHAR(200) NOT NULL,
			kid         VARCHAR(128) NULL,           -- 封鎖某把金鑰時填
			jti         VARCHAR(128) NULL,           -- 封鎖某個 token 時填
			subject     VARCHAR(200) NULL,			  -- 封鎖某個 token : 可選，用來追查 (sub claim)
			reason      VARCHAR(200) NULL,			  -- 封鎖原因 (compromised, retired, manual)
			created_at  DATETIME2 NOT NULL DEFAULT SYSUTCDATETIME(),
			expires_at  DATETIME2 NULL
		);
		CREATE INDEX IX_jwk_denylist_issuer_kid ON jwk_denylist(issuer, kid) WHERE kid IS NOT NULL;
		CREATE INDEX IX_jwk_denylist_issuer_jti ON jwk_denylist(issuer, jti) WHERE jti IS NOT NULL;
