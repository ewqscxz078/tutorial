https://maven.apache.org/index.html
https://www.journaldev.com/33645/maven-commands-options-cheat-sheet
https://kentyeh.github.io/mavenStartup/index.html

================================================================================
========================= windows 安裝 =========================================
================================================================================
前提
須設定
	JAVA_HOME 環境變數至少1.7版

1. linke to http://maven.apache.org/download.cgi

2. download 最新

3. 下載本機解壓縮至某目錄
	ex:
		maven_path=\tools\apache-maven-x.x.x\

4. 設定環境變數
	M2_HOME=$maven_path
	PATH append $maven_path 或者 %M2_HOME%\bin\


================================================================================
========================= 指令 =================================================
================================================================================
mvn -h

 -am,--also-make                        If project list is specified, also
                                        build projects required by the
                                        list
 -amd,--also-make-dependents            If project list is specified, also
                                        build projects that depend on
                                        projects on the list
 -B,--batch-mode                        Run in non-interactive (batch)
                                        mode (disables output color)
 -b,--builder <arg>                     The id of the build strategy to
                                        use
 -C,--strict-checksums                  Fail the build if checksums don't
                                        match
 -c,--lax-checksums                     Warn if checksums don't match
 -cpu,--check-plugin-updates            Ineffective, only kept for
                                        backward compatibility
 -D,--define <arg>                      Define a system property
 -e,--errors                            Produce execution error messages
 -emp,--encrypt-master-password <arg>   Encrypt master security password
 -ep,--encrypt-password <arg>           Encrypt server password
 -f,--file <arg>                        Force the use of an alternate POM
                                        file (or directory with pom.xml)
 -fae,--fail-at-end                     Only fail the build afterwards;
                                        allow all non-impacted builds to
                                        continue
 -ff,--fail-fast                        Stop at first failure in
                                        reactorized builds
 -fn,--fail-never                       NEVER fail the build, regardless
                                        of project result
 -gs,--global-settings <arg>            Alternate path for the global
                                        settings file
 -gt,--global-toolchains <arg>          Alternate path for the global
                                        toolchains file
 -h,--help                              Display help information
 -l,--log-file <arg>                    Log file where all build output
                                        will go (disables output color)
 -llr,--legacy-local-repository         Use Maven 2 Legacy Local
                                        Repository behaviour, ie no use of
                                        _remote.repositories. Can also be
                                        activated by using
                                        -Dmaven.legacyLocalRepo=true
 -N,--non-recursive                     Do not recurse into sub-projects
 -npr,--no-plugin-registry              Ineffective, only kept for
                                        backward compatibility
 -npu,--no-plugin-updates               Ineffective, only kept for
                                        backward compatibility
 -nsu,--no-snapshot-updates             Suppress SNAPSHOT updates
 -ntp,--no-transfer-progress            Do not display transfer progress
                                        when downloading or uploading
 -o,--offline                           Work offline
 -P,--activate-profiles <arg>           Comma-delimited list of profiles
                                        to activate
 -pl,--projects <arg>                   Comma-delimited list of specified
                                        reactor projects to build instead
                                        of all projects. A project can be
                                        specified by [groupId]:artifactId
                                        or by its relative path
 -q,--quiet                             Quiet output - only show errors
 -rf,--resume-from <arg>                Resume reactor from specified
                                        project
 -s,--settings <arg>                    Alternate path for the user
                                        settings file
 -t,--toolchains <arg>                  Alternate path for the user
                                        toolchains file
 -T,--threads <arg>                     Thread count, for instance 2.0C
                                        where C is core multiplied
 -U,--update-snapshots                  Forces a check for missing
                                        releases and updated snapshots on
                                        remote repositories
 -up,--update-plugins                   Ineffective, only kept for
                                        backward compatibility
 -v,--version                           Display version information
 -V,--show-version                      Display version information
                                        WITHOUT stopping build
 -X,--debug                             Produce execution debug output

================================================================================
========================= 基本 =================================================
================================================================================

1.顯示 maven 版本
	mvn -v --version

================================================================================
========================= 建立 maven project ===================================
================================================================================

互動式
	mvn archetype:generate
		Choose version
		定義groupId
		定義artifactId
		定義version
		定義package

直接式
	mvn archetype:create -DgroupId=idv.kentyeh.software -DartifactId=firstmaven \
		  -DpackageName=idv.kentyeh.software -DarchetypeArtifactId:maven-archetype-quickstart \
		  -Dversion=1.0-SNAPSHOT

================================================================================
========================= 常用指令 =============================================
================================================================================

刪除 project/target
	mvn clean

This command compiles the java source classes of the maven project.
	mvn compiler:compile

This command compiles the test classes of the maven project.
	mvn compiler:testCompile

This command builds the maven project and packages them into a JAR, WAR, etc.	// 會多執行 compile testCompile test
	mvn package

This command builds the maven project and installs the project files (JAR, WAR, pom.xml, etc) to the local repository.
	mvn install

This command is used to deploy the artifact to the remote repository
	mvn deploy

This command validates the maven project that everything is correct and all the necessary information is available.
	mvn validate

This command generates the dependency tree of the maven project.
	mvn dependency:tree

This command analyzes the maven project to identify the unused declared and used undeclared dependencies.
It’s useful in reducing the build size by identifying the unused dependencies and then remove it from the pom.xml file.
	mvn dependency:analyze

This command generates a site for the project. You will notice a “site” directory in the target after executing this command. There will be multiple HTML files inside the site directory that provides information related to the project.
	mvn site:site

This command is used to run the test cases of the project using the maven-surefire-plugin.
	mvn test

It’s used to compile the source Java classes of the project.
	mvn compile

This command build the project, runs all the test cases and run any checks on the results of the integration tests to ensure quality criteria are met.
	mvn verify


[options]
	This command is used to build a project from a different location. We are providing the pom.xml file location to build the project. It’s useful when you have to run a maven build from a script.
		mvn -f maven-example-jar/pom.xml package

	This command is used to run the maven build in the offline mode. It’s useful when we have all the required JARs download in the local repository and we don’t want Maven to look for any JARs in the remote repository.
		mvn -o package

	Runs the maven build in the quiet mode, only the test cases results and errors are displayed.
		mvn -q package

	Prints the maven version and runs the build in the debug mode. It’s opposite of the quiet mode and you will see a lot of debug messages in the console.
		mvn -X package

	Used to display the maven version information.
		mvn -v

	This command prints the maven version and then continue with the build. It’s equivalent to the commands mvn -v;mvn package
		mvn -V package

	The skipTests system property is used to skip the unit test cases from the build cycle. We can also use -Dmaven.test.skip=true to skip the test cases execution.
		mvn -DskipTests package

	This command tells maven to run parallel builds using the specified thread count. It’s useful in multiple module projects where modules can be built in parallel. It can reduce the build time of the project.
		mvn -T 4 package

================================================================================
========================= 常用指令 範例使用 ====================================
================================================================================
指定 pom.xml 執行某個class 單元測試
	mvn test -f "${projectpath}/pom.xml" --settings "${setting.xml filename and path}" -Dtest=${單元測試class name}
		範例: mvn test -f "/home/ccuser/jenkins/workspace/greenc108/b0-stats-dependency/aw-app/MILITARY/sris3-aw-military-departure-web/pom.xml" --settings "/home/ccuser/.m2/settings-master.xml" -Dtest=ReportToolServiceTest -DBASEDIR="/home/ccuser/jenkins/workspace/greenc108/b0-stats-dependency/aw-app/BASEDIR"

================================================================================
========================= package ==============================================
================================================================================

打包專案成 jar 檔
	mvn package
		於有mavne 專案下
			執行 mvn package
				將會產生
				maven-archiver folder
				surefire-reports folder		// 單元測試報告
				maven-status folder
				xxxxxxx-SNAPSHOT.jar

			於有main 的java class 指定執行
			ex:
				java -cp target/dynamic-file-0.0.1-SNAPSHOT.jar com.my.demo.MavenDemo

	mvn package -Dmaven.test.skip=true
		略過單元測試編譯與單元測試執行
		將會產生
			maven-archiver folder
			maven-status folder
			xxxxxxx-SNAPSHOT.jar

	mvn package -DskipTests
		單元測試編譯 但會略過單元測試執行
		將會產生
			maven-archiver folder
			maven-status folder
			xxxxxxx-SNAPSHOT.jar

================================================================================
========================= 確認有效 pom =========================================
================================================================================
	mvn help:effective-pom