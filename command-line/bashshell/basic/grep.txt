\t not wok in grep
https://askubuntu.com/questions/53071/how-to-grep-for-tabs-without-using-literal-tabs-and-why-does-t-not-work

https://www.hy-star.com.tw/tech/linux/filter/filter.html#egrep
===================================================================
========================= grep ====================================
===================================================================
grep [-a –v –i –n –v ] '搜尋的字串' [filename/dir]
	-a : 把binary 檔案用 text 檔案的方式搜尋資料

	-c : 計算找到 '搜尋字串' 的次數(count)

	-i : 忽略大小寫的不同,也就是大小寫都會視為相同

	-n : 輸出行號,在每行的前面加上行號ex: 1: 2: 3: (number)

	-v : 反向選擇,也就是說顯示出沒有 '搜尋字串'內容的那一行(--invert-match)

	-V : 大寫的V,顯示出來grep的版本跟相關的資訊(version)

	-I : 不含 Binary file

	-e : 使用 pattern

    -o : 選項的作用是只輸出匹配的部分，而不是整個匹配的行

指定目錄搜尋
	grep [key word] /d/SRIS_CODE/Greenc/.cache/

指定檔案搜尋
	grep [key word] /d/SRIS_CODE/Greenc/.cache/issue.checkouted

排除附檔名且符合字串 key word
	grep -r --exclude=*.{pdf,jpg,gif,png,ttf,keystore,jasper,xls} [key word]

附檔名為指定且符合字串 key word
	grep -r --include=*.{java} [key word]

排除指定目錄且符合字串 key word
	grep -iR "hibernate" --include=".java" --exclude-dir=".*"
	grep -iR "hibernate" --include=*.{java,xml,properties} --exclude-dir=".*"

找到window 換行符號
	grep -r --exclude=*.{pdf,jpg,gif,png,ttf,keystore,jasper,xls} $'\r' * >> checkM.txt

大小寫不分
	grep -i [key word] /d/SRIS_CODE/Greenc/.cache/issue.checkouted

all match file name 完全批配
	grep -iw [key word] /d/SRIS_CODE/Greenc/.cache/issue.checkouted

尋找 檔案有 key word 的 列舉
	grep -R ".[key word]."

加上顏色
	grep -iR --color ".[key word]."

搜尋結果排除
	https://www.codingfailure.com/linux-tutorial/grep-command/grep-not-include/
	ex: 搜尋到關鍵字 [key word] 但不含有 * 的
		grep -iR --color ".[key word]."	| grep -v "*"

使用可排除pattern的方式
	https://unix.stackexchange.com/questions/96480/with-grep-how-can-i-match-a-pattern-and-invert-match-another-pattern

多顯示上下文
	ex: 多顯示上下文5行的keyword
		grep -A 5 -B 5 [key word]

排除 Binary file
	ex: before
		grep -inR "A"
Binary file 1.open_DBSchemaEditor_NOSAVE.xlsm.gif matches
		after
		grep -IinR "A"

列出 match file list
	grep -lR "sit\.ris\.sris\.dpl"

	進階
		grep -lR "sit\.ris\.sris\.dpl" | xargs sed -i 's/sit\.ris\.sris\.dpl/app\.ris\.sris\.dpl/g'

grep 結果放在 loop
	https://stackoverflow.com/questions/16317961/how-to-process-each-output-line-in-a-loop
	grep xyz abc.txt | while read -r line ; do
		echo "Processing $line"
	done

要搜尋的字串有〝-〞就要用 grep -e 來區別說〝-〞接的不是選項,而是要搜尋有字元〝-〞的字串
	$ cat my_file ←例如有檔案〝my_file〞內容如下:
	Introduction to Linux
	Linux is a muti-user & muti-task OS

	$ grep -e '-user' my_file ←搜尋檔案〝my_file〞中的字串'-user'
	Linux is a muti-user & muti-task OS

多重字串搜尋
	$ grep -ne 'mail' -ne 'news' /etc/passwd ←搜尋字串〝mail〞&〝news〞並列出行號
	9:mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
	10:news:x:9:13:news:/etc/news:
	27:mailnull:x:47:47::/var/spool/mqueue:/sbin/nologin

grep -q 不顯示輸出(安靜模式)常用於腳本語言作程式的判斷用
	grep -q 'google' re.txt && cp re.txt re.txt~ ←如果檔案〝reg.txt〞有字串〝google〞,就備份此檔

grep -F 為不用正規表示法解讀 => fgrep // 針對非正則表示法時搜尋加速
grep -E 為用延伸正規表示法來匹配 => egrep
zgrep for 縮壓檔搜尋

===================================================================
========================= 情境 ====================================
===================================================================
從檔案裡多個路徑 grep 關鍵字
	# 假設 file1 包含多個路徑，每行一個路徑
	# 例如：
	# /path/to/file1
	# /path/to/file2
	# ...
	# 使用 xargs 讀取每行路徑，並傳遞給 grep 進行搜尋，在另存到檔案 result.list
	xargs -I {} grep 'your_keyword' {} < file1 > result.list
