https://www.itread01.com/content/1542849603.html
https://www.tutorialspoint.com/unix/unix-regular-expressions.htm

sed 全名為 stream editor，流編輯器，主要用來修改內容

sed [-nefr] [動作]
	選項與引數：
	-n ：使用安靜(silent)模式。在一般 sed 的用法中，所有來自 STDIN 的資料一般都會被列出到終端上。但如果加上 -n 引數後，則只有經過sed 特殊處理的那一行(或者動作)才會被列出來。
	-e ：直接在命令列模式上進行 sed 的動作編輯；
	-f ：直接將 sed 的動作寫在一個檔案內， -f filename 則可以執行 filename 內的 sed 動作；
	-r ：sed 的動作支援的是延伸型正規表示法的語法。(預設是基礎正規表示法語法)
	-i ：直接修改讀取的檔案內容，而不是輸出到終端。

動作說明： [n1[,n2]]function
	n1, n2 ：不見得會存在，一般代表『選擇進行動作的行數』，舉例來說，如果我的動作是需要在 10 到 20 行之間進行的，則『 10,20[動作行為] 』

function：
	a ：新增， a 的後面可以接字串，而這些字串會在新的一行出現(目前的下一行)～
	c ：取代， c 的後面可以接字串，這些字串可以取代 n1,n2 之間的行！
	d ：刪除，因為是刪除啊，所以 d 後面通常不接任何咚咚；
	i ：插入， i 的後面可以接字串，而這些字串會在新的一行出現(目前的上一行)；
	p ：列印，亦即將某個選擇的資料印出。通常 p 會與引數 sed -n 一起執行～
	s ：取代，可以直接進行取代的工作哩！通常這個 s 的動作可以搭配正規表示法！例如 1,20s/old/new/g 就是啦！

===================================================================
======================== sed -n with p ============================
===================================================================
https://www.796t.com/content/1541710042.html
https://terryl.in/zh/linux-sed-command/

依據行數範圍擷取檔案內容
	顯示第8-12行
		sed -n '8,12p' [yourfile]
			-n 安靜模式，不顯示任何輸出
			p 輸出前面指定的東西
	僅顯示第8行
		sed -n '8 p' [yourfile]

https://www.796t.com/content/1549896493.html
https://www.hy-star.com.tw/tech/linux/sed/sed.html
match pattern
	sed -n '/${pattern}/p' ${file}
		列印出 match content

	sed -n '/${pattern}/=' ${file}
		列印出 match content 的行數
		等於 grep -n '^\\' ${file} | cut -d : -f1

	sed -n '/${pattern}/{=;p}' ${file}
		列印出 match content 和 行數

===================================================================
======================== sed -i ===================================
===================================================================
動作操作後，直接改檔案
	取代一次
		sed -i 's/原字串/新字串/' /home/1.txt

	取代全部
		sed -i 's/原字串/新字串/g' /home/1.txt

https://officeguide.cc/linux-sed-delete-first-last-specific-line-tutorial-examples/
刪除指定行
	# 刪除 myfile.txt 的第一行
	sed -i '1d' myfile.txt

	# 刪除 myfile.txt 的第 8 行
	sed -i '8d' myfile.txt

	# 刪除 myfile.txt 的最後一行
	sed -i '$d' myfile.txt

	# 刪除 myfile.txt 的第 3 行至第 6 行
	sed -i '3,6d' myfile.txt

刪除匹配行
	# 刪除包含 my_keyword 關鍵字的行
	sed -i '/my_keyword/d' myfile.txt

	# 刪除包含 my_keyword 關鍵字的行到檔案結尾
	sed -i '/my_keyword/,d' myfile.txt

===================================================================
======================== sed \1 ===================================
===================================================================
https://stackoverflow.com/questions/4609949/what-does-1-in-sed-do
插入每行前面
	sed 's#\(.*\)#我要插入\1#g' <sed_file>