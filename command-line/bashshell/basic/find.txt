===================================================================
========================= find ====================================
===================================================================
find and grep 找出所有檔案有符合字串的檔案 // 常用
	find . -type f -exec grep -l [key word] {}

find and egrep 找出字尾有space的檔案 // 透過正則表示法
	find . -type f -exec egrep -l " +$" {} \;

找出為檔案且檔名
	find . -type f -name [fileName]

找出檔名且不分大小寫
	find . -iname [fileName]

找出為檔案且檔名[keyword] 有符合字串的檔案
	find . -type f -name "*ReportJob.java" -exec egrep -nR --color "[A-Z]{2,}" {} +

使用正則表示法找出檔名或目錄 // 注意目錄下有個文件"abar9"，如果你用"ab.*9"來match，將找不到結果，應使用".*ab.*9"或者".*/ab.*9"
	find . -regex ".*/[0-9]*/.c" -print

	若想用類似 egrep 則
		find . -regextype "posix-egrep" -regex ".*/(RCDFZ609|RCDFZ608)\.csv" -print

	不分大小寫
		find . -regextype "posix-egrep" -iregex ".*/(RCDFZ609|RCDFZ608)\.csv" -print

find and replace 取代 \t 變四個空白
	find . -iname '*.js' -type f -exec sed -i 's/\t/    /g' {} +
	find . -iname '*.css' -type f -exec sed -i 's/\t/    /g' {} +
	find . -iname '*.xhtml' -type f -exec sed -i 's/\t/    /g' {} +
	find . -iname '*.jsp' -type f -exec sed -i 's/\t/    /g' {} +
	find . -iname '*.properties' -type f -exec sed -i 's/\t/    /g' {} +

取得完整路徑
	find ~+ -type f -name [fileName]

找指定目錄下的前十大檔案
	find . -type f -name "*.[你想確認的附檔名]" -print0 | xargs -0 du -h | sort -rh | head -n 10

https://superuser.com/questions/913390/how-to-search-for-a-file-in-war-ear-and-jar-files-recursively-in-linux
	war內搜尋檔案
		find . -name \*.war -exec sh -c 'unzip -l {} \; | grep {keyworkd}'

	jar內搜尋檔案
		find . -name \*.jar -exec sh -c 'jar tf {} \; | grep {keyworkd}'
===================================================================
========================= find 與時間有關方式======================
===================================================================
時間參數的用法
	-atime 檔案的最後存取時間到find 的執行時間差
	-amin n 同 -atime 只是n是以分為單位
	-ctime 檔案的狀態資訊最後修改的時間到find 的執行時間差
	-cmin n 同 -ctime只是n是以分為單位
	-mtime 檔案的最後修改時間到find 的執行時間差
	-mmin n 同 -mtime只是n是以分為單位

在 7 天前有修改過的檔案，例如今天是6/10，則7天前是6/4
	$ find ./ -mtime 7

在 7 天之內有修改過的檔案，例如今天是6/10，則7天內則是6/4~6/10 的檔案都列出
	$ find ./ -mtime -7

在 7 天以前有修改過的檔案，例如今天是6/10，則7天6/4 以前的檔案都列出
	$ find ./ -mtime +7

當天
	$ find ./ -mtime 0

===================================================================
========================= 換行議題 ================================
===================================================================
https://www.itread01.com/p/192065.html
	find 每輸出一個檔名, 後面都會接著輸出一個換行符 ('n'), 因此我們看到的 find 的輸出都是一行一行

	xargs 預設是以空白字元 (空格, TAB, 換行符) 來分割記錄

	[bash-4.1.5] find -name '*.log'
	./file 1.log
	./file 2.log
		find -name '*.log' | xargs rm
		rm: cannot remove `./file': No such file or directory

	為了解決此類問題, 讓 find 在打印出一個檔名之後接著輸出一個 NULL 字元 ('')
	而不是換行符, 然後再告訴 xargs 也用 NULL 字元來作為記錄的分隔符.
	這就是 find 的 -print0 和 xargs 的 -0 的來歷吧.

	find -name '*.log' -print0 | xargs -0 rm

	-print 在每一個輸出後會新增一個回車換行符,而-print0則不會。