==========================================================================================
==========================================暫存操作========================================
==========================================================================================

git status
aOn branch issue/203
Your branch is up to date with 'origin/issue/203'.

Changes not staged for commit:
  (use 'git add <file>...' to update what will be committed)
  (use 'git checkout -- <file>...' to discard changes in working directory)
		modified:   REPORTS/SERVER/sris3-report-server-exec/src/test/java/tw/gov/moi/ae/reporting/server/cli/ReportingServerCLITest.java

		顯示以上之類
放到暫存
	git stash

自訂名稱放到暫存
	git stash save 'my_stash'

列舉暫存清單
	git stash list

列舉暫存清單與檔案異動簡要清單
	https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/How-to-list-and-show-the-git-stash-history
		git stash list --stat

		// 完整路徑
		git stash list --stat --name-only

將最新暫存 apply 到當前 branch
	git stash apply

指定 stash apply 到當前 branch
	git stash apply stash@{2}

包含 untracked file 都加入 stash
	git stash save '自訂 stash name' --include-untracked

// https://stackoverflow.com/questions/5506339/how-can-i-git-stash-a-specific-file
指定檔案 存到 stash，如果檔案有 untracked，要先 git add 後再執行如下指令
	git stash push -m 'assign file 1 3' test1 test3

簽出指定 stash，並移除指定 stash
	git stash pop stash@{?}

移除指定stash
	git stash drop	stash@{?}

	// To show files changed in the last stash only file
git stash show -p // to view the content of the most recent stash
git stash show -p stash@{1} // To view the content of an arbitrary stash

Move your stashes from one repo to another
  This was useful for me when we created a new branch for a new major release,
but were still working on our current version as well.
I cloned our repo again and kept the new project on our new branch, but also wanted to get my stashes there.

Download your stashes
	git stash show -p > [patchName]

	git stash show -p stash@{?} > [patchName]

  You'll have to specify your stash and name your file whatevery you want.
Do this for as all your stashes, and you'll have patch files in your pwd.

Apply your stashes
	cd /new/project/dir
	git apply /old/project/dir/[patchName]
	git stash

	使用 git stash apply [id] 也有可能衝突
	如內容出現
		<<<<<<< Updated upstream
						<mapping resource='tw/gov/moi/domain/Tcdf2102Type.hbm.xml' />
						<mapping resource='tw/gov/moi/domain/Tcdf2103Type.hbm.xml' />
						<mapping resource='tw/gov/moi/domain/Tcdf2200Type.hbm.xml' />
						<mapping resource='tw/gov/moi/domain/Tcdfc2o3Type.hbm.xml' />
		=======
		>>>>>>> Stashed changes

	Updated upstream 代表 上面的版本
	Stashed changes 代表 stash版本
	fix掉即可

// 參考 https://wincent.com/wiki/Git_merge_conflict_cheatsheet

// 含蓋 untracked-files to patch
// https://stackoverflow.com/questions/22818155/git-stash-to-patch-with-untracked-files

誤刪 stash drop/pop 想還原
	則下 for ref in `git fsck --unreachable | grep commit | cut -d' ' -f3`; do git show --summary $ref; done | less
	找到 stash log
	git stash apply {hash_id}

將當前 git status untracked file 壓縮成檔案

stash track and untrack to patch
	https://stackoverflow.com/questions/22818155/git-stash-to-patch-with-untracked-files

	// track stash
		git stash show -p stash@{?} > patch
	// untrack stash
		git diff 4b825dc642cb6eb9a060e54bf8d69288fbee4904 stash^3 >> patch

	// apply patch to 當前 branch
		cd /new/project/dir
		git apply /old/project/dir/[patchName]