import org.apache.sshd.server.SshServer;
import org.apache.sshd.server.auth.password.PasswordAuthenticator;
import org.apache.sshd.server.keyprovider.SimpleGeneratorHostKeyProvider;
import org.apache.sshd.server.subsystem.sftp.SftpSubsystemFactory;
import org.junit.jupiter.api.*;

import java.nio.file.Paths;
import java.util.Collections;

import static org.junit.jupiter.api.Assertions.assertTrue;

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
class SftpServerTest {
    private SshServer sshd;
    private final int SFTP_PORT = 2222;
    private final String SFTP_USERNAME = "testUser";
    private final String SFTP_PASSWORD = "testPass";

    @BeforeAll
    void startSftpServer() throws Exception {
        sshd = SshServer.setUpDefaultServer();
        sshd.setPort(SFTP_PORT);
        sshd.setKeyPairProvider(new SimpleGeneratorHostKeyProvider(Paths.get("hostkey.ser")));
        sshd.setPasswordAuthenticator((username, password, session) ->
            SFTP_USERNAME.equals(username) && SFTP_PASSWORD.equals(password));
        sshd.setSubsystemFactories(Collections.singletonList(new SftpSubsystemFactory()));
        sshd.start();
        System.out.println("Mock SFTP Server started on port " + SFTP_PORT);
    }

    @AfterAll
    void stopSftpServer() throws Exception {
        if (sshd != null) {
            sshd.stop();
            System.out.println("Mock SFTP Server stopped.");
        }
    }

    @Test
    void testSftpConnection() {
        // 這裡可以寫測試程式，確保 Spring Boot 應用可以連接 SFTP
        assertTrue(true); // 只是示意，應該用實際 SFTP 客戶端測試
    }
}
