ref
	https://www.baeldung.com/spring-data-entitymanager

適合情境
	1.select 部分欄位的 distinct 之條件式查詢
		Specification 僅能針對 entity 整個 distinct ，不能針對部分欄位 distinct
	2.資料庫特殊語法 條件式查詢

使用 DAO with EntityMananger

	@Entity
	public class User {
		@Id
		@GeneratedValue
		private Long id;
		private String name;
		private String email;
		// ...
	}

	public interface CustomUserRepository {
		User customFindMethod(Long id);
	}

	public class XxxxImplDAO implements CustomUserRepository{

		@PersistenceContext
		private EntityMananger entityMananger;

		@Override
		public User customFindMethod(Long id) {
			return (User) entityManager.createQuery("FROM User u WHERE u.id = :id")
			  .setParameter("id", id)
			  .getSingleResult();
		}
	}

	// 注意要將 CustomUserRepository 整合到主 Repository，以利其間接注入 EntityMananger
	@Repository
	public interface UserRepository extends JpaRepository<User, Long>, CustomUserRepository {
	}


entityManager.createQuery with entity
	public User customFindMethod(Long id) {
		return (User) entityManager.createQuery("FROM User u WHERE u.id = :id")
		  .setParameter("id", id)
		  .getSingleResult();
	}

entityManager.createNativeQuery with 原生 sql
	public List<Object[]> findUsersByName(String userName) {
        String sql = "SELECT * FROM user WHERE name = :name";
        Query query = entityManager.createNativeQuery(sql);
        query.setParameter("name", userName);

        return query.getResultList();
    }

命名參數
	String sql = "SELECT * FROM user WHERE name = :name";
	Query query = entityManager.createNativeQuery(sql);
	query.setParameter("name", userName);

位置參數
	String sql = "SELECT * FROM user WHERE name = ?";
	Query query = entityManager.createNativeQuery(sql);
	query.setParameter(1, userName);


