ref
	https://medium.com/the-sixt-india-blog/implementing-dynamic-filtering-on-joined-queries-using-jpa-specification-and-criteria-api-db2a62ed8942
	https://blog.wuwii.com/jpa-specification.html
	chatGPT

適合情境
	Entity 條件式查詢且無資料庫特殊語法(也支援 entity 關聯)

Specification<entity> spec = new Specification(ConditionDTO conditionDTO){
	@Override
	public Predicate toPredicate(Root<entity> root, CriteriaQuery<?> query, CriteriaBuilder cb){
		List<Predicate> wherePredicates = new ArrayList<>();
		// 1. column =
		if(StringUtils.isNotBlank(conditionDTO.getColumn())){
			wherePredicates.add(cb.equal(root.get("column"))); 			// 一般欄位
			//wherePredicates.add(cb.equal(root.get("id").get("column"))); // 複合鍵欄位
		}
		// 2. column in
		if(StringUtils.isNotBlank(conditionDTO.getColumn())){
			In<String> inClause = cb.in(root.get("column"));
			for(String areaCode : areaCodes){
				inClause.value(areaCode);
			}
			wherePredicates.add(inClause);
		}

		// 3. column like
		if(StringUtils.isNotBlank(conditionDTO.getColumn())){
			wherePredicates.add(cb.like(root.get("column")), "%" + column +  "%");
		}

		// 4. column between
		if(StringUtils.isNotBlank(conditionDTO.getColumn())){
			// 大包裹方式
			// (
			//   ( column between a and b )
			//   or column = '' or column = '000000' or column is null
			// )
			List<Predicate> tmpPredicate = new ArrayList();
			tmpPredicate.add(cb.between(root.get("column"), start, end)); // between a and b
			tmpPredicate.add(cb.equal(root.get("column"), "")); //  column = ''
			tmpPredicate.add(cb.equal(root.get("column"), "000000")); // column = '000000'
			tmpPredicate.add(cb.isNull(root.get("column"))); // column is null
			Predicate specCondition = cb.or(tmpPredicate.toArray(new Predicate[tmpPredicate.size()])); 為了確保包起來之間有 or
			wherePredicates.add(specCondition);
		}
	}
}

