https://www.javacodemonk.com/disable-ssl-validation-in-spring-resttemplate-e2c53583

    @Autowired
    private RestTemplateBuilder restTemplateBuilder;

    private ResponseEntity<String> postRestURL(final String url, final HttpEntity<String> entity) {
        try {

            // ignore ssl check of restTemplate
            final TrustManager[] trustAllCerts = new TrustManager[] { new X509TrustManager() {
                @Override
                public X509Certificate[] getAcceptedIssuers() {
                    return new X509Certificate[0];
                }

                @Override
                public void checkServerTrusted(final X509Certificate[] chain, final String authType) throws CertificateException {
                }

                @Override
                public void checkClientTrusted(final X509Certificate[] chain, final String authType) throws CertificateException {
                }
            } };
            final SSLContext sslContext = SSLContext.getInstance("SSL");
            sslContext.init(null, trustAllCerts, new SecureRandom());
            // copy from redmine#3304: fix Insecure SSL:Server Identify Verification Disabled
            final HostnameVerifier defaultHostnameVerifier = new HostnameVerifier() {
                @Override
                public boolean verify(final String hostname, final SSLSession session) {
                    if (Objects.isNull(hostname)) {
                        return false;
                    }
                    return !hostname.equals("驗證");
                }
            };

            final CloseableHttpClient httpClient = HttpClients.custom().setSSLContext(sslContext)
                    .setSSLHostnameVerifier(defaultHostnameVerifier).build();
            final HttpComponentsClientHttpRequestFactory factory = new HttpComponentsClientHttpRequestFactory();
            factory.setHttpClient(httpClient);
            final RestTemplate restTemplate = this.restTemplateBuilder.requestFactory(() -> factory).build();

            final ResponseEntity<String> response = restTemplate.postForEntity(new URI(url), entity, String.class);
            LOGGER.info("reponse : {}", response);
            return response;
        } catch (final Exception e) {
            LOGGER.error("error : {}", e);
            throw new RuntimeException("post fail URL :" + url);
        }
    }