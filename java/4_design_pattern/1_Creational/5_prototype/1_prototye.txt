https://www.digitalocean.com/community/tutorials/prototype-design-pattern-in-java

=================================================================================================================================================================
======================================== Prototype Design Pattern =================================================================================================
=================================================================================================================================================================
特徵
	1. 提供機制將原始對象複製到新對象，然後根據我們的需要進行修改
		假設我們有一個從數據庫加載數據的對象。 現在我們需要在程序中多次修改這些數據，
		因此使用 new 關鍵字創建對象並再次從數據庫加載所有數據並不是一個好主意。
		更好的方法是將現有對象克隆到新對像中，然後進行數據操作。
		原型設計模式要求您正在復制的對象應該提供複製功能。 它不應該由任何其他類完成。
		然而，是否使用對象屬性的淺複製或深複製取決於需求及其設計決策

方法
	1. implements Cloneable (jdk 內建)

public class Employees implements Cloneable{

	private List<String> empList;

	public Employees(){
		empList = new ArrayList<String>();
	}

	public Employees(List<String> list){
		this.empList=list;
	}
	public void loadData(){
		//read all employees from database and put into the list
		empList.add("Pankaj");
		empList.add("Raj");
		empList.add("David");
		empList.add("Lisa");
	}

	public List<String> getEmpList() {
		return empList;
	}

	@Override
	public Object clone() throws CloneNotSupportedException{
			List<String> temp = new ArrayList<String>();
			for(String s : this.getEmpList()){
				temp.add(s);
			}
			return new Employees(temp);
	}

}

public class PrototypePatternTest {

	public static void main(String[] args) throws CloneNotSupportedException {
		Employees emps = new Employees();
		emps.loadData();

		//Use the clone method to get the Employee object
		Employees empsNew = (Employees) emps.clone();
		Employees empsNew1 = (Employees) emps.clone();
		List<String> list = empsNew.getEmpList();
		list.add("John");
		List<String> list1 = empsNew1.getEmpList();
		list1.remove("Pankaj");

		System.out.println("emps List: "+emps.getEmpList());
		System.out.println("empsNew List: "+list);
		System.out.println("empsNew1 List: "+list1);
	}

}

	// emps List: [Pankaj, Raj, David, Lisa]
	// empsNew List: [Pankaj, Raj, David, Lisa, John]
	// empsNew1 List: [Raj, David, Lisa]