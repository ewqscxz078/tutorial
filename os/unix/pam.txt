https://blog.xuite.net/im2222/blog/303677311
https://helpful.knobs-dials.com/index.php/PAM_notes

Pluggable Authentication Module
	可插入式認證模組
	提供帳號管理、使用者於系統活動期間的紀錄管理、控管使用者對服務的存取管理等等。
	PAM 算是認證系統的前端，而認證機制 (即真正要採取認證的方式，比如根據 passwd file 或 LDAP 等來做認證) 則是屬於認證系統的後端

格式
	modules_type	control_flags	modules_path	options
	模組類型		控制旗標		模組路徑		傳給模組的參數

模組類型: 主要功用
	auth
		對使用者所提供的認證資訊做驗證，比如檢查帳號密碼。

	account
		非認證方面的帳號管理，比如檢查使用者帳號是否已過期、哪些帳號可從哪些來源端來存取服務、及限定存取服務的時間等等。

	password
		與更新認證訊息有關，比如使用者變更密碼時會檢查新密碼是否夠安全。

	session
		這個模組類型裡所使用的模組，是與使用者在存取服務前後需執行的一些工作有關聯。比如紀錄掛載目錄的資訊、使用者做資料交換時的訊息紀錄等等。

控制旗標: 影響模組執行時的行為
	required => one of required module fail continue，全部執行完才回傳 fail
		當使用此旗標的其中一個認證模組傳回 failure 時，還是會繼續往下執行其他堆疊模組的認證
		(相同的 module_type)，等全部都執行完畢後，PAM 才傳回 failure。那如果認證模組傳回 success 時，
		也還是會繼續往下執行其他堆疊模組的驗證。或許您會想說既然已經傳回失敗了，
		為何還要繼續往下去執行下一個 PAM 模組呢 ? 如此不是多此一舉嗎 ?
		其實這樣做的目的是為了安全上的考量，也就是說透過堆疊模組這樣的設計，
		可以讓用戶端永遠不知道他是如何被拒絕的，因為如果當用戶了解其被拒絕的理由後，
		可能就會特別針對這方面來做進一步的突破，而這將會造成對系統安全上的一大威脅。

	requisite => one of requisite module fail break，直接中斷回傳 fail，break if fail
		當使用此旗標的認證模組傳回 failure 時，則會終止整個認證程序，而不再往下驗證，
		PAM 會馬上傳回一個 failure 給應用程式。那如果傳回 success ，則還是會繼續往下執行其他堆疊模組的驗證。
		一般人往往分不清楚 required 與 requisite 的差異，簡單的說，不論是 required 或 requisite，
		只要傳回 success，都還是會繼續往下驗證，只有當它們都傳回 success 時，才算是真正的 success。
		而如果 required 傳回 failure 時，是會繼續執行其他堆疊模組的驗證，但 requisite 傳回 failure 時，
		則是會終止整個驗證程序。

	sufficient => one of sufficient module success，直接中斷回傳 success，break if success
		以相同的 modules_type 來說，如果之前的 required 都傳回 success (或者之前根本沒有 required)，
		而使用此旗標的認證模組也傳回 success 時，則不再繼續往下執行此 modules_type 中的其他堆疊模組，
		並傳回 success 給　PAM 函式。不過這並不意味著整個認證就是成功的，
		萬一有其他 modules_type 的認證模組使用 required 旗標並傳回 failure 時，那還是算認證失敗。
		另外不論當 required 是傳回 success 或 failure 時，sufficient 的 failure 都會被當成 optional 來看待，
		而被忽略。

	optional
		使用此旗標的認證模組，無論傳回 success 或 failure，都不會影響整體的認證結果，其主要是用來做 log 而已。

	include
		這算是比較特殊的控制旗標，主要是用來引入其後所接的檔案 ( include file )，
		至於檔案內容就是傳統的那四個欄位囉。另外使用 include 所含括的檔案內容，
		是會在 include 的那個位置被插入的。

模組參數:主要作用
	use_first_pass
		認證模組不會要求使用者輸入密碼，而是從之前的 auth modules 來取得使用者密碼，若密碼不符合或未輸入密碼，則視為認證失敗。
	try_first_pass
		認證模組不會要求使用者輸入密碼，而是從之前的 auth modules 來取得使用者密碼，若密碼不符合或未輸入密碼則要求重新輸入一次。
	debug
		讓 syslogd 將 level 為 debug 等級的資訊寫入紀錄檔內。
	nullok
		允許無密碼 ( /etc/shadow 的密碼欄位是空的 ) 的使用者可以登入系統。

認證模組的功能
	詳見
		https://blog.xuite.net/im2222/blog/303677311